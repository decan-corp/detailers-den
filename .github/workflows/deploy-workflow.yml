name: 'Deploy'
on:
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.ref }}

permissions: write-all

jobs:
  lint-and-test:
    name: Lint and unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          # cache: bun // setup-node doesn't support caching bun js

      - uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint and type checks
        run: |
          bun concurrently -g \
          "bun lint" \
          "bun typecheck"

  db-migration-dev:
    name: Run Database Migration in Dev
    if: github.event.ref == 'refs/heads/develop'
    needs: lint-and-test
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout ${{ github.ref }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Get Environment Variables from Vercel
        run: |
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} env pull .env

      - name: Run Database Migration
        run: bun --env-file .env drizzle:migrate

  db-migration-prod:
    name: Run Database Migration in Production
    if: github.event.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout ${{ github.ref }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Get Environment Variables from Vercel
        run: |
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes --environment=production
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} env pull --environment=production .env

      - name: Run Database Migration
        run: bun --env-file .env drizzle:migrate

  release:
    name: Release
    if: github.event.ref == 'refs/heads/main'
    needs: db-migration-prod
    runs-on: ubuntu-latest
    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.PAT }}

      - id: changelog
        name: Conventional Changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          git-message: 'chore(release): {version} [no ci]'
          git-user-email: emnnipal@gmail.com
          git-user-name: Emmanuel Nipal
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: 'false'

      - name: Create Github Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  deploy-dev:
    if: github.event.ref == 'refs/heads/develop'
    needs: db-migration-dev
    runs-on: ubuntu-latest
    environment:
      name: Develop
      url: ${{ steps.vercel_deploy.outputs.VERCEL_URL }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_DOMAIN: ${{ vars.VERCEL_DOMAIN }}
      VERCEL_ORG_NAME: ${{ vars.VERCEL_ORG_NAME }}
    steps:
      - name: Checkout ${{ github.ref }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Deploy to Vercel
        id: vercel_deploy
        run: |
          vercel_url="develop-$VERCEL_DOMAIN"

          bun vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} env pull
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} build
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} deploy --prebuilt > domain.txt
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} --scope=$VERCEL_ORG_NAME alias set `cat domain.txt` $vercel_url

          echo "VERCEL_URL=https://${vercel_url}" >> $GITHUB_OUTPUT

  deploy-prod:
    if: needs.release.outputs.skipped == 'false'
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.vercel_deploy.outputs.VERCEL_URL }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      CUSTOM_DOMAIN: 185dd.pro
    steps:
      - name: Checkout ${{ needs.release.outputs.tag }} branch
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ needs.release.outputs.tag }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.17.0

      - uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Deploy to Vercel
        id: vercel_deploy
        run: |
          vercel_url="$CUSTOM_DOMAIN"

          bun vercel --token=${{ secrets.VERCEL_TOKEN }} pull --yes --environment=production
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} env pull --environment=production
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} build --prod
          bun vercel --token=${{ secrets.VERCEL_TOKEN }} deploy --prebuilt --prod > domain.txt

          echo "VERCEL_URL=https://${vercel_url}" >> $GITHUB_OUTPUT
