name: 'Deploy'
on:
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.ref }}

permissions: write-all

jobs:
  lint-and-test:
    name: Lint and unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 18.13.0
          # cache: 'bun' # TODO: bun cache is not yet supported

      # TODO: temporary support for caching dependencies
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          path: ~/.bun/install/cache

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint and type checks
        run: |
          bun concurrently -g \
          "bun lint" \
          "bun typecheck"

  release:
    name: Release
    if: github.event.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest
    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.PAT }}

      - id: changelog
        name: Conventional Changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          git-message: 'chore(release): {version} [no ci]'
          git-user-email: emnnipal@gmail.com
          git-user-name: Emmanuel Nipal
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: 'false'

      - name: Create Github Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
